// @mixin frame_size($width, $height: $width) {
//   width: $width;
//   height: $height;
// }

// .avatar {
//   @include frame_size(150px);
//   @extend %size;

//   border-radius: 50%;
// }

// .icon {
//   @include frame_size(50px);
//   @extend %size;

//   border: 2px solid lightblue;
// }

//Mixin without arguments
// @mixin position-center {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate(-50%, -50%);
// }

// .decoration {
//     @include position-center();
// }

// Mixin with arguments
// @mixin position-center(
//   $position-type,
//   $position-x,
//   $position-y,
//   $offset-x,
//   $offset-y
// ) {
//   position: $position-type;
//   top: $position-x;
//   left: $position-y;
//   transform: translate($offset-x, $offset-y);
// }

// .decoration {
//   @include position-center(absolute, 50%, 50%, -50%, -50%);
// }

// Mixin with Optional Arguments
// @mixin position-center(
//   $layer-index,
//   // обов'язковий аргумент
//   $position-type: absolute,
//   $position-x: 50%,
//   $position-y: $position-x,
//   $offset-x: $position-x,
//   $offset-y: $position-x,
//   $display,
// ) {
//   position: $position-type;
//   top: $position-x;
//   left: $position-y;
//   transform: translate($offset-x * -1, $offset-y) * -1;
//   z-index: $layer-index;
//   display: $display;
// }

// .decoration {
//   @include position-center(100, block);
// }

// Mixin with Keyword Arguments
// @mixin position-center(
//   $layer-index,
//   // обов'язковий аргумент
//   $position-type: absolute,
//   $position-x: 50%,
//   $position-y: $position-x,
//   $offset-x: $position-x,
//   $offset-y: $position-x,
//   $display
// ) {
//   position: $position-type;
//   top: $position-x;
//   left: $position-y;
//   transform: translate($offset-x * -1, $offset-y * -1);
//   z-index: $layer-index;
//   display: $display;
// }

// .decoration {
//   @include position-center($offset-y: 70%, $layer-index: 100, $display: block);
// }

// Button sizes
// @mixin btn-size($args...) {
//   @for $i from 1 through length($args) {
//     #{nth($args, $i)} {
//       $factor: ($i * 4 - 4);
//       padding: (4px + $factor) (8px + $factor);
//       border-radius: (4px + $factor);
//     }
//   }
// }

// @include btn-size(".btn-sm", ".btn-md", ".btn-lg", ".btn-xl");

// Button types
// @mixin btn-type($types...) {
//   @each $name, $color in meta.keywords($types) {
//     .btn-#{$name} {
//       border: 2px sold $color;
//       color: $color;
//     }
//   }
// }

// @include btn-type($success: lightgreen, $error: tomato, $info: lightblue);

// At-rule @content
@mixin hover {
  &:not([disabled]):hover {
    @content;
  }
}

.button {
  background-color: white;
  border: 1px sold darkblue;

  @include hover($state: disabled) {
    color: white;
    background-color: darkblue;
  }
}
